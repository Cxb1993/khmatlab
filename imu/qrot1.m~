function [vv, dvvdq] = qrot1(v, q, qc)

  if (nargin == 0)
    do_unit_test();
  else
    if (nargin < 3)
      qc = qconj(q);
    end

    if (length(v) == 3)
      vq = cat(1, v, 0);
    else
      vq = v;
    end

    vv = qmult(qmult(q,vq), qconj(q));

    if (length(v) == 3)
      vv = vvq(1:3);
    end

    if (nargin > 1)
      I4 = eye(4);
      Ic4 = diag([-1 -1 -1 1]);
      
      dvvdq = zeros(4,4);

      for i=1:4
	dvvdq(:,i) = qmult(I4(:,i), qmult(vq, qc)) \
	    + qmult(q, qmult(vq, Ic4(:,i)));
      end

      if (length(v) == 3)
	dvvdq = dvvdq(1:3,:);
      end
    end
  end

function do_unit_test()

  q = (quaternion(randn(3,1), rand(1)))';
  
  I4 = eye(4);
  dq = 1e-6;
  tol = 1e-5;

  v = cat(1, randn(3,1), 0);

  [vv, dvvdq] = qrot1(v,q);

  dvv_dq = zeros(4,4);

  for i=1:4
    dvv_dq(:,i) = (qrot1(v, q + I4(:,i)*dq) - vv) / dq;
  end

  if ( norm(dvvdq - dvv_dq) > tol )
    disp('Test 1. Failed')
    cat(2, dvvdq, dvv_dq)
    keyboard
  else
    disp('Test 1. OK')
  end

  
    
  
